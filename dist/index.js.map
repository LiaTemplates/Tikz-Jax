{"mappings":"ACAA,IAAI,EAAA,EAAQ,IAAI,IAEhB,eAAe,MAAM,CACnB,WACA,cAAc,YAIZ,aAAc,CACZ,KAAK,GAJC,IAAA,CAAA,KAAA,CAAgB,GAChB,IAAA,CAAA,GAAA,CAAc,KAAK,MAAM,EAIjC,CAEA,mBAAoB,CACC,IAAI,CAAC,YAAY,CAAC,CAAE,KAAM,MAAO,GACpD,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,EAAI,GAGjC,OAAO,gBAAgB,CAAC,UAAW,AAAC,IAC9B,EAAM,IAAI,CAAC,EAAE,EAAI,IAAI,CAAC,GAAG,EAAI,EAAM,IAAI,CAAC,GAAG,GAC7C,EAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAE,EAAM,IAAI,CAAC,GAAG,EACpC,IAAI,CAAC,SAAS,CAAC,EAAM,IAAI,CAAC,GAAG,EAEjC,GAEA,IAAI,CAAC,MAAM,EACb,CAEA,UAAU,CAAW,CAAE,CACrB,GAAI,CAAC,IAAI,CAAC,UAAU,CAClB,OAGF,IAAI,CAAC,KAAK,GAEV,IAAM,EAAM,SAAS,aAAa,CAAC,MACnC,CAAA,EAAI,SAAS,CAAG,EAChB,IAAM,EAAa,EAAI,UAAU,AACjC,CAAA,EAAW,KAAK,CAAC,QAAQ,CAAG,WAC5B,EAAW,KAAK,CAAC,eAAe,CAAG,QAEnC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAC9B,CAEA,QAAS,CACP,GAAI,CAAC,IAAI,CAAC,UAAU,CAClB,OAGF,GAAI,EAAM,GAAG,CAAC,IAAI,CAAC,KAAK,EAAG,CACzB,IAAI,CAAC,SAAS,CAAC,EAAM,GAAG,CAAC,IAAI,CAAC,KAAK,GACnC,MACF,CAEA,IAAM,EAAS,SAAS,aAAa,CAAC,UACtC,EAAO,YAAY,CAAC,QAAS,qCAC7B,EAAO,MAAM,CAAG,CAAC;;;;;;;;;;;;;;;kDAe2B,EAAE,IAAI,CAAC,GAAG,CAAC;;;;;;;;;;;cAW/C,EAAE,IAAI,CAAC,KAAK,CAAC;;;eAGZ,CAAC,CAEV,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAC9B,CAEA,OAAQ,CACN,GAAI,IAAI,CAAC,UAAU,CACjB,KAAO,IAAI,CAAC,UAAU,CAAC,UAAU,EAC/B,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAG5D,CAEA,IAAI,MAAO,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CAEA,IAAI,KAAK,CAAK,CAAE,CACV,IAAI,CAAC,KAAK,GAAK,GACjB,CAAA,IAAI,CAAC,KAAK,CAAG,CADf,CAGF,CAEA,sBAAuB,CACrB,IAAI,CAAC,KAAK,CAAG,EACf,CACF","sources":["<anon>","src/index.ts"],"sourcesContent":["(() => {\nvar $c2848ebcf924d7cd$var$cache = new Map();\ncustomElements.define(\"tikz-jax\", class extends HTMLElement {\n    constructor(){\n        super();\n        this.code_ = \"\";\n        this.id_ = Math.random();\n    }\n    connectedCallback() {\n        const shadowRoot = this.attachShadow({\n            mode: \"open\"\n        });\n        this.code_ = this.textContent || \"\";\n        // Listen for the message from the iframe\n        window.addEventListener(\"message\", (event)=>{\n            if (event.data.id == this.id_ && event.data.svg) {\n                $c2848ebcf924d7cd$var$cache.set(this.code_, event.data.svg);\n                this.insertSVG(event.data.svg);\n            }\n        });\n        this.render();\n    }\n    insertSVG(svg) {\n        if (!this.shadowRoot) return;\n        this.clear();\n        const div = document.createElement(\"div\");\n        div.innerHTML = svg;\n        const svgElement = div.firstChild;\n        svgElement.style.position = \"relative\";\n        svgElement.style.backgroundColor = \"white\";\n        this.shadowRoot.appendChild(svgElement);\n    }\n    render() {\n        if (!this.shadowRoot) return;\n        if ($c2848ebcf924d7cd$var$cache.has(this.code_)) {\n            this.insertSVG($c2848ebcf924d7cd$var$cache.get(this.code_));\n            return;\n        }\n        const iframe = document.createElement(\"iframe\");\n        iframe.setAttribute(\"style\", \"border: 0; width: 100%; height: 0\") // Start with height 0\n        ;\n        iframe.srcdoc = `\n        <html>\n          <head>\n            <script>\n              var countdown = 50;\n\n              function checkForSVG() {\n                if (countdown-- <= 0) {\n                  return\n                }\n\n                const tikzImage = document.body.querySelector('svg');\n\n                if (tikzImage) {\n                  const svg = tikzImage.parentElement.innerHTML;\n                  window.parent.postMessage({ id: ${this.id_}, svg }, '*');\n                } else {\n                  setTimeout(checkForSVG, 100);\n                }\n              }  \n            </script>\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"https://tikzjax.com/v1/fonts.css\">\n            <script src=\"https://tikzjax.com/v1/tikzjax.js\" onload=\"setTimeout(checkForSVG, 100)\"></script>\n          </head>\n          <body>\n            <script type=\"text/tikz\">\n              ${this.code_}\n            </script>\n          </body>\n        </html>`;\n        this.shadowRoot.appendChild(iframe);\n    }\n    clear() {\n        if (this.shadowRoot) while(this.shadowRoot.firstChild)this.shadowRoot.removeChild(this.shadowRoot.firstChild);\n    }\n    get code() {\n        return this.code_;\n    }\n    set code(value) {\n        if (this.code_ !== value) this.code_ = value;\n    }\n    disconnectedCallback() {\n        this.code_ = \"\";\n    }\n});\n\n})();\n//# sourceMappingURL=index.js.map\n","var cache = new Map()\n\ncustomElements.define(\n  'tikz-jax',\n  class extends HTMLElement {\n    private code_: string = ''\n    private id_: number = Math.random()\n\n    constructor() {\n      super()\n    }\n\n    connectedCallback() {\n      const shadowRoot = this.attachShadow({ mode: 'open' })\n      this.code_ = this.textContent || ''\n\n      // Listen for the message from the iframe\n      window.addEventListener('message', (event) => {\n        if (event.data.id == this.id_ && event.data.svg) {\n          cache.set(this.code_, event.data.svg)\n          this.insertSVG(event.data.svg)\n        }\n      })\n\n      this.render()\n    }\n\n    insertSVG(svg: string) {\n      if (!this.shadowRoot) {\n        return\n      }\n\n      this.clear()\n\n      const div = document.createElement('div')\n      div.innerHTML = svg\n      const svgElement = div.firstChild as SVGElement\n      svgElement.style.position = 'relative'\n      svgElement.style.backgroundColor = 'white'\n\n      this.shadowRoot.appendChild(svgElement)\n    }\n\n    render() {\n      if (!this.shadowRoot) {\n        return\n      }\n\n      if (cache.has(this.code_)) {\n        this.insertSVG(cache.get(this.code_))\n        return\n      }\n\n      const iframe = document.createElement('iframe')\n      iframe.setAttribute('style', 'border: 0; width: 100%; height: 0') // Start with height 0\n      iframe.srcdoc = `\n        <html>\n          <head>\n            <script>\n              var countdown = 50;\n\n              function checkForSVG() {\n                if (countdown-- <= 0) {\n                  return\n                }\n\n                const tikzImage = document.body.querySelector('svg');\n\n                if (tikzImage) {\n                  const svg = tikzImage.parentElement.innerHTML;\n                  window.parent.postMessage({ id: ${this.id_}, svg }, '*');\n                } else {\n                  setTimeout(checkForSVG, 100);\n                }\n              }  \n            </script>\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"https://tikzjax.com/v1/fonts.css\">\n            <script src=\"https://tikzjax.com/v1/tikzjax.js\" onload=\"setTimeout(checkForSVG, 100)\"></script>\n          </head>\n          <body>\n            <script type=\"text/tikz\">\n              ${this.code_}\n            </script>\n          </body>\n        </html>`\n\n      this.shadowRoot.appendChild(iframe)\n    }\n\n    clear() {\n      if (this.shadowRoot) {\n        while (this.shadowRoot.firstChild) {\n          this.shadowRoot.removeChild(this.shadowRoot.firstChild)\n        }\n      }\n    }\n\n    get code() {\n      return this.code_\n    }\n\n    set code(value) {\n      if (this.code_ !== value) {\n        this.code_ = value\n      }\n    }\n\n    disconnectedCallback() {\n      this.code_ = ''\n    }\n  }\n)\n"],"names":["$c2848ebcf924d7cd$var$cache","Map","customElements","define","HTMLElement","constructor","code_","id_","Math","random","connectedCallback","attachShadow","mode","textContent","window","addEventListener","event","data","id","svg","set","insertSVG","render","shadowRoot","clear","div","document","createElement","innerHTML","svgElement","firstChild","style","position","backgroundColor","appendChild","has","get","iframe","setAttribute","srcdoc","removeChild","code","value","disconnectedCallback"],"version":3,"file":"index.js.map"}